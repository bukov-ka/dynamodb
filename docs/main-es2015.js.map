{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/confirmation-dialog/confirmation-dialog.component.ts","./src/app/confirmation-dialog/confirmation-dialog.component.html","./src/app/gsi-solution/gsi-solution.component.ts","./src/app/gsi-solution/gsi-solution.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/live-sql/live-sql.component.ts","./src/app/live-sql/live-sql.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/query-run/query-run.component.ts","./src/app/query-run/query-run.component.html","./src/app/services/current-data.service.ts","./src/app/services/tasks-config.service.ts","./src/app/table-view/table-view.component.ts","./src/app/table-view/table-view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LiveSqlComponent } from './live-sql/live-sql.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'item/:id', component: LiveSqlComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'DynamoDB Trainer';\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <button mat-icon-button>\r\n      <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\r\n    </button>\r\n  <h1>SQL to DynamoDB Transformation Trainer</h1>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-sidenav-container>\r\n  <mat-sidenav #sidenav mode=\"side\" opened>\r\n    <mat-nav-list>\r\n      <app-nav-menu></app-nav-menu>      \r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatExpansionModule } from '@angular/material/expansion'\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LiveSqlComponent } from './live-sql/live-sql.component';\r\nimport { TableViewComponent } from './table-view/table-view.component';\r\nimport { GsiSolutionComponent } from './gsi-solution/gsi-solution.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { QueryRunComponent } from './query-run/query-run.component';\r\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\r\nimport 'alasql';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LiveSqlComponent,\r\n    TableViewComponent,\r\n    GsiSolutionComponent,\r\n    NavMenuComponent,\r\n    QueryRunComponent,\r\n    ConfirmationDialogComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dialog',\r\n  templateUrl: './confirmation-dialog.component.html',\r\n  styleUrls: ['./confirmation-dialog.component.scss']\r\n})\r\nexport class ConfirmationDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public message: string) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div mat-dialog-content>\r\n    {{message}}\r\n   </div>\r\n   <div mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Yes</button> \r\n    <button mat-button (click)=\"onNoClick()\">No</button>     \r\n</div>   ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CurrentDataService } from '../services/current-data.service';\r\nimport * as alasql from 'alasql';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-gsi-solution',\r\n  templateUrl: './gsi-solution.component.html',\r\n  styleUrls: ['./gsi-solution.component.scss']\r\n})\r\nexport class GsiSolutionComponent implements OnInit {\r\n  primaryKey: string;\r\n  sortKey: string = \"\";\r\n  updateSubscription: Subscription;\r\n  _solutionRequested: boolean;\r\n  get SolutionRequested(): boolean {\r\n    return this._solutionRequested;\r\n  }\r\n  @Input()\r\n  set SolutionRequested(solution: boolean) {\r\n    this._solutionRequested = solution;\r\n    if (solution) {\r\n      this.primaryKey = this.currentDataService.Config.solutionPrimaryKey;\r\n      this.sortKey = this.currentDataService.Config.solutionSortKey;\r\n    }\r\n  }\r\n\r\n  constructor(public currentDataService: CurrentDataService) {\r\n    this.updateSubscription = currentDataService.columnsUpdated.subscribe((m: Array<any>) => {\r\n      if (m == null) {\r\n        this.primaryKey = \"\";\r\n        this.sortKey = \"\";\r\n      }\r\n      else {\r\n        this.primaryKey = currentDataService.columns[0];\r\n        this.sortKey = \"\";\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.updateSubscription.unsubscribe();\r\n  }\r\n}\r\n","<div *ngIf=\"currentDataService.Data\">\r\n<h3>Define a Global Secondary Index for the table</h3>\r\n<mat-form-field>\r\n    <mat-label>Primary Key</mat-label>\r\n    <mat-select  [(ngModel)]=\"primaryKey\" required name=\"primaryKey\">\r\n    <mat-option *ngFor=\"let column of currentDataService.columns\" [value]=\"column\">\r\n        {{column}}\r\n    </mat-option>\r\n    </mat-select>        \r\n</mat-form-field>\r\n\r\n<mat-form-field>\r\n    <mat-label>Sort Key</mat-label>\r\n    <mat-select [(ngModel)]=\"sortKey\" name=\"sortKey\">\r\n    <mat-option value=\"\">None</mat-option>\r\n    <mat-option *ngFor=\"let column of currentDataService.columns\" [value]=\"column\">\r\n        {{column}}\r\n    </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n<app-query-run [runConfig]=\"run\" \r\n*ngFor=\"let run of currentDataService.Config?.runs\"\r\n[primaryKey]=\"primaryKey\" [sortKey]=\"sortKey\"\r\n[SolutionRequested]=\"SolutionRequested\"></app-query-run>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"aboutText\">\r\n<h2>About</h2>\r\n<p>With this site you get DynamoDB knowledge and train yourself for designing DynamoDB structure. \r\nThis site contains set of tasks each of which requires you to migrate SQL DB to DynamoDB.</p>\r\n\r\n<p>The main problem with studying DynamoDB is moving from relation-based paradigm to action-based paradigm.\r\nEven similar relational databases can be migrated to very different DynamoDB bases because they are used differently.\r\nWe saw the same in relational DBs when a 'Full Name' field could be totally fine in one DB but the same field could violate the first normal form in another DB (if we use it to get a last name from it).</p>\r\n\r\n<p>That is why each task contain not only SQL DB scheme and data itself, but list of actions to be implemented.\r\nAll of the actions should be fulfilled by using only one single Global Secondary Index Query.</p>\r\n\r\n<p>To form DynamoDB table you will use SQL which is a natural language designed for denormalization relational databased.\r\n<a href=\"http://alasql.org/\">Alasql</a> is used as the SQL engine. It is pretty close to usual SQL, but it is case sensitive and supports union of sets with different attributes which is closer to Dynamodb.</p>\r\n\r\n<p>Solution of each task will require:</p>\r\n<ol>\r\n    <li>Creating SQL to transform SQL DB to DynamoDB data.</li>\r\n    <li>Defining fields for Primary Key and Sort Key (optional).</li>\r\n    <li>Setting query parameters for each task which will produce the desired output.</li>\r\n</ol>\r\n\r\n<p>Each task has sample solution. You can see it by clicking at the Solution button(<mat-icon>visibility</mat-icon>).\r\nBut do not press it until you tried to find a solution yourself!</p>\r\n\r\n<p>If you have any questions or if you find any issues please do not hesitate to contact me: \r\n<a href=\"mailto:borisovke@gmail.com?subject=DynamoSQL\">Konstantin Borisov</a>.</p>\r\n\r\n<h2>Additional Materials</h2>\r\n<ul>\r\n    <li><a href=\"https://www.youtube.com/watch?v=jzeKPKpucS0\">AWS re:Invent 2017: [REPEAT] Advanced Design Patterns for Amazon DynamoDB. by Rick Houlihan</a></li>\r\n    <li><a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-relational-modeling.html\">Best Practices for Modeling Relational Data in DynamoDB</a></li>\r\n    <li><a href=\"https://www.dynamodbguide.com/data-modeling-overview\">Data Modeling Examples</a></li>    \r\n</ul>\r\n</div>\r\n\r\n<p class=\"separateParagraph\">And now you can start the training: <a href=\"/item/1\">The first challenge</a>.</p>","import { Component, OnInit, ɵCompiler_compileModuleSync__POST_R3__ } from '@angular/core';\r\nimport { CurrentDataService } from '../services/current-data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { TasksConfigService } from '../services/tasks-config.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\r\nimport alasql from 'alasql';\r\n\r\n\r\n@Component({\r\n  selector: 'app-live-sql',\r\n  templateUrl: './live-sql.component.html',\r\n  styleUrls: ['./live-sql.component.scss'],\r\n  providers: [CurrentDataService]\r\n})\r\nexport class LiveSqlComponent implements OnInit {\r\n\r\n  sqlText: string;\r\n  solutionRequested: boolean;\r\n\r\n  private paramSubscription: Subscription;\r\n  constructor(public currentDataService: CurrentDataService,\r\n    private route: ActivatedRoute,\r\n    private taskConfigService: TasksConfigService,\r\n    public dialog: MatDialog,\r\n  ) {\r\n    this.paramSubscription = route.params.subscribe(params => {\r\n      var itemId = params['id'];\r\n      taskConfigService.getConfigById(itemId).subscribe(config => {\r\n        this.currentDataService.Config = config;\r\n        this.processNewConfig();\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  processNewConfig() {\r\n    this.solutionRequested = false; // No solution by default\r\n    var config = this.currentDataService.Config;\r\n    this.sqlText = config.initialJoinSQL;    \r\n    this.currentDataService.resetData();\r\n    \r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.paramSubscription.unsubscribe();\r\n  }\r\n\r\n  executeSQL(callback?: () => void): void {\r\n    let config = this.currentDataService.Config;\r\n    let xlsxFile = config.xlsxFile;\r\n    var tableCreationPromises = [];\r\n    config.tableMapping.forEach((tableMappings, i) => { // Select all the tables in the database\r\n      let tableSelect = `select * from XLSX(\\\"assets/data/${xlsxFile}\\\",  {sheetid:'${tableMappings.sheet}',headers:true});`;\r\n      tableCreationPromises.push(\r\n        alasql.promise(tableSelect).then(tableData => {\r\n          alasql(`DROP TABLE IF EXISTS ${tableMappings.table}`);\r\n          alasql(`CREATE TABLE ${tableMappings.table}`);\r\n          alasql(`SELECT * INTO ${tableMappings.table} FROM ?`, [tableData]);\r\n        })\r\n          .catch(function (err) {\r\n            // Here we can't get any user errors. Only internal errors are possible\r\n            console.error(\"Error getting table data: \", err);\r\n          })\r\n      );\r\n    });\r\n\r\n    // Wait for all the tables created\r\n    Promise.all(tableCreationPromises).then(() =>\r\n      this.ProcessSelectWithUnions(this.sqlText, callback)\r\n    );\r\n\r\n  }\r\n\r\n  private ProcessSelectWithUnions(userSQL: string, callback?: () => void): void {\r\n    let unionReplaceRegEx = new RegExp(`(union all|union)`, \"ig\");\r\n    var splittedSQL = userSQL.replace(unionReplaceRegEx, '@').split('@'); // split the query by any 'union' clause    \r\n    let self = this;\r\n    var promises = [];\r\n    var res = [];\r\n    splittedSQL.forEach(s => {\r\n      promises.push(alasql.promise(s)\r\n        .then(function (data) {\r\n          data.forEach((row) => res.push(row)); // Push each row to the resulting table\r\n          self.currentDataService.Data = data;\r\n        }).catch(function (err) {\r\n          self.currentDataService.setErrorState(err);\r\n          console.error(self.currentDataService.resultError);\r\n        }));\r\n    });\r\n    Promise.all(promises).then(() => {\r\n      self.currentDataService.Data = res;\r\n      if(callback) { // Perform any post data\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  showSolutionSQL() {\r\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\r\n      width: '350px',\r\n      data: \"You will get complete SQL and will lost an opportunity to solve it all by yourself. Ok?\"\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.sqlText = this.currentDataService.Config.solutionSQL;\r\n        this.executeSQL(()=>\r\n          {\r\n          this.solutionRequested = false; // Reset the value to rerun the fields update\r\n          setTimeout(() => {\r\n            this.solutionRequested = true;\r\n          }, 100);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<h1 *ngIf=\"currentDataService.Config\">{{currentDataService.Config.name}}</h1>\r\n<div *ngIf=\"currentDataService.Config\" class=\"schemaBlockWrapper\">\r\n    <div  class=\"dbSchemeImage\">\r\n        <img [src]=\"'assets/' + currentDataService.Config.schemaPic\">    \r\n    </div>\r\n    <div>\r\n        <h3 class=\"actionsHeader\">Actions:</h3>\r\n        <ul>\r\n            <li *ngFor=\"let action of currentDataService.Config.actionsDescription\">{{action}}</li>\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n<mat-form-field style=\"width: 75%; scroll-behavior: auto;\">\r\n<textarea matInput\r\ncdkTextareaAutosize\r\n[(ngModel)]=\"sqlText\"\r\n placeholder=\"Enter SQL query\"></textarea>\r\n</mat-form-field>\r\n<button mat-icon-button (click)=\"showSolutionSQL()\">\r\n    <mat-icon matTooltip=\"See solution\">visibility</mat-icon>\r\n</button>\r\n <br/>\r\n<button mat-flat-button mat-button color=\"primary\"\r\nmatTooltip=\"Run SQL and see results\"\r\n(click)=\"executeSQL()\">Run SQL</button>\r\n<br/>\r\n<font color=\"red\"\r\n*ngIf=\"currentDataService.resultError\"\r\n>\r\n<br>\r\n{{currentDataService.resultError}}\r\n</font>\r\n<br>\r\n\r\n<app-table-view \r\n    *ngIf=\"currentDataService.Data\"\r\n    [content]=\"currentDataService.Data\"></app-table-view>\r\n<app-gsi-solution [SolutionRequested]=\"solutionRequested\"></app-gsi-solution>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.scss']\r\n})\r\nexport class NavMenuComponent implements OnInit {\r\n\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<ol>    \r\n    <mat-list-item [routerLink]=\"['/item/1']\"><li>Aggregates</li></mat-list-item>\r\n    <mat-list-item [routerLink]=\"['/item/2']\"><li>One-To-Many</li></mat-list-item>\r\n    <mat-list-item [routerLink]=\"['/item/3']\"><li>Many-To-Many</li></mat-list-item>\r\n    <mat-list-item [routerLink]=\"['/item/4']\"><li>Hierarchical Queries</li></mat-list-item>\r\n    <mat-list-item [routerLink]=\"['/item/5']\"><li>Leaderboard</li></mat-list-item>\r\n    <mat-list-item [routerLink]=\"['/item/6']\"><li>Sparse Index</li></mat-list-item>\r\n</ol>\r\n<hr>\r\n<mat-list-item [routerLink]=\"['/']\"> About </mat-list-item>","import { Component, OnInit, Input } from '@angular/core';\r\nimport * as alasql from 'alasql';\r\nimport { CurrentDataService } from '../services/current-data.service';\r\nimport { RunConfig } from '../shared/models/run_config';\r\nimport { element } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-query-run',\r\n  templateUrl: './query-run.component.html',\r\n  styleUrls: ['./query-run.component.scss']\r\n})\r\nexport class QueryRunComponent implements OnInit {\r\n\r\n  @Input() primaryKey: string;\r\n  @Input() sortKey: string;\r\n  @Input()\r\n  public runConfig: RunConfig;\r\n\r\n  resultError: string = null;\r\n  resultKey: string = \"\";\r\n  primaryKeyValue: string = \"\";\r\n  sortKeyValue: string = \"\";\r\n  descending: boolean = false;\r\n  operator: string = \"=val\";\r\n  limit: string = \"\";\r\n  limitOptions: { val: string, title: string }[] = [\r\n    { \"val\": \"\", \"title\": \"None\" },\r\n    { \"val\": \"1\", \"title\": \"1\" },\r\n    { \"val\": \"3\", \"title\": \"3\" },\r\n    { \"val\": \"10\", \"title\": \"10\" },\r\n  ];\r\n  success: boolean;\r\n  expectedResult: string; // What we expect from the run\r\n  actualResult: string; // What we got from the run\r\n  _solutionRequested: boolean;\r\n  get SolutionRequested(): boolean {\r\n    return this._solutionRequested;\r\n  }\r\n  @Input()\r\n  set SolutionRequested(solution: boolean) {\r\n    this._solutionRequested = solution;\r\n    if (solution) {\r\n      this.primaryKeyValue = this.runConfig.solutionKeyValues.primaryKeyValue;\r\n      this.sortKeyValue = this.runConfig.solutionKeyValues.sortKeyValue;\r\n      this.descending = this.runConfig.solutionKeyValues.descending ?? false;\r\n      this.operator = this.runConfig.solutionKeyValues.operator;\r\n      this.limit = this.runConfig.solutionKeyValues.limit ? this.runConfig.solutionKeyValues.limit.toString() : undefined;\r\n      this.resultKey = this.runConfig.solutionKeyValues.resultKey;\r\n    }\r\n  }\r\n  constructor(public currentDataService: CurrentDataService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // Put quotes around string values\r\n  quoteValue(val: any, column: string): string {\r\n    var result = typeof (val) == 'string'\r\n      ? `\\\"${val}\\\"` : val;\r\n    return result;\r\n  }\r\n\r\n  runQuery() {\r\n    this.resultError = null;\r\n    let self = this;\r\n    let topExpression = this.limit ? `top ${this.limit}` : \"\";\r\n    let descendingExpression = this.descending ? 'desc' : 'asc'\r\n    let orderByExpression = this.sortKey ?\r\n      `order by ${this.sortKey} ${descendingExpression}, ${this.primaryKey}`\r\n      : `order by ${this.primaryKey}`;\r\n    let sortKeyQuoted = this.sortKeyValue;\r\n    if (this.currentDataService.Data.length > 0 && (!this.sortKey == undefined || this.operator == undefined || !this.operator.includes('LIKE'))) {\r\n      sortKeyQuoted = this.quoteValue(this.sortKeyValue, this.sortKey);\r\n    }\r\n    let primaryKeyValueQuoted = this.quoteValue(this.primaryKeyValue, this.primaryKey);\r\n    let sortKeyExpression = `${this.sortKey} ${this.operator}`.replace(/val/gi, sortKeyQuoted);\r\n    let whereExpression = this.sortKey ?\r\n      `where  ${this.primaryKey} = ${primaryKeyValueQuoted} AND ${sortKeyExpression}`\r\n      : `where  ${this.primaryKey} = ${primaryKeyValueQuoted}`;\r\n    let selectExpression = `select ${topExpression} * from ? data \\\r\n    ${whereExpression} \\\r\n    ${orderByExpression} `;\r\n    alasql.default.promise(selectExpression, [this.currentDataService.Data])\r\n      .then(function (data) {\r\n        var res = [];\r\n        data.forEach(element => {\r\n          res.push(element[self.resultKey]);\r\n        });\r\n        if (JSON.stringify(res) == JSON.stringify(self.runConfig.result)) {\r\n          self.success = true;\r\n        }\r\n        else {\r\n          self.success = false;\r\n          self.expectedResult = JSON.stringify(self.runConfig.result);\r\n          self.actualResult = JSON.stringify(res);\r\n        }\r\n      }).catch(function (err) {\r\n        self.resultError = err;\r\n        console.error(err);\r\n      });\r\n  }\r\n}\r\n","<hr>\r\n<mat-expansion-panel [expanded]=\"true\" #panel class=\"mat-elevation-z8\">\r\n    <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n            {{runConfig.name}}\r\n        </mat-panel-title>\r\n        <mat-panel-description>\r\n            {{runConfig.description}}\r\n        </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <form #f=\"ngForm\">\r\n        <mat-form-field>\r\n            <mat-label>Primary Key Value</mat-label>\r\n            <input matInput type=\"text\" required [(ngModel)]=\"primaryKeyValue\" name=\"primaryKeyValue\">\r\n        </mat-form-field>\r\n        <br>\r\n\r\n        <mat-form-field *ngIf=\"sortKey\">\r\n            <mat-label>Sort Key Value</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"sortKeyValue\" name=\"sortKeyValue\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"sortKey\">\r\n            <mat-label>Operator</mat-label>\r\n            <mat-select style=\"width:64px\" [(ngModel)]=\"operator\" name=\"operator\">\r\n                <mat-option value=\"=val\">=</mat-option>\r\n                <mat-option value=\"&gt;val\">&gt;</mat-option>\r\n                <mat-option value=\"&gt;=val\">&gt;=</mat-option>\r\n                <mat-option value=\"&lt;val\">&lt;</mat-option>\r\n                <mat-option value=\"&lt;=val\">&lt;=</mat-option>\r\n                <mat-option value=' LIKE \"val%\" '>begins_with()</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-checkbox matInput type=\"checkbox\" *ngIf=\"sortKey\" [(ngModel)]=\"descending\" name=\"descending\">Descending\r\n        </mat-checkbox>\r\n        <br>\r\n        <mat-form-field>\r\n            <mat-label>Limit</mat-label>\r\n            <mat-select [(ngModel)]=\"limit\" name=\"limit\">\r\n                <mat-option *ngFor=\"let l of limitOptions\" [value]=\"l.val\">{{l.title}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n            <mat-label>Result Key</mat-label>\r\n            <mat-select [(ngModel)]=\"resultKey\" name=\"resultKey\" required>\r\n                <mat-option *ngFor=\"let column of currentDataService.columns\" [value]=\"column\">\r\n                    {{column}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <br>\r\n        <font color=\"red\" *ngIf=\"resultError\">\r\n            {{resultError}}\r\n        </font>\r\n        <br>\r\n        <div>\r\n            <button mat-flat-button mat-button color=\"primary\" class=\"vcentered\" style=\"vertical-align: middle;\"\r\n                [disabled]=\"f.invalid\" (click)=runQuery() matTooltip=\"Run the query and check the result\">Query</button>\r\n            <mat-icon class=\"vcentered\" color=\"primary\" *ngIf=\"success\">check_circle</mat-icon>\r\n            <font color=\"primary\" *ngIf=\"success && success!=undefined\">\r\n                Correct!\r\n            </font>\r\n            <mat-icon class=\"vcentered result-icon\" color=\"error\" *ngIf=\"!success && success!=undefined\">error\r\n            </mat-icon>\r\n            <font color=\"red\" *ngIf=\"!success && success!=undefined\">\r\n                Expected result is \"{{expectedResult}}\" and we got \"{{actualResult}}\".\r\n            </font>\r\n        </div>\r\n    </form>\r\n</mat-expansion-panel>","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TaskConfig } from '../shared/models/task_config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrentDataService {\r\n  \r\n  constructor() { }\r\n  public columnsUpdated : Subject<Array<any>> = new Subject<Array<any>>();\r\n\r\n  public columns: Array<string>;\r\n  public resultError: string;\r\n\r\n  private _data: Array<any>;\r\n  public get Data(): Array<any>{\r\n    return this._data;\r\n  }\r\n  public set Data(d: Array<any>){\r\n    this._data = d;\r\n    if(d != null)\r\n    {\r\n      this.columns = this.getColumns(d);\r\n      this.resultError = null;\r\n    }\r\n    else\r\n    {\r\n      this.columns = null;\r\n    }\r\n    this.columnsUpdated.next(d);\r\n  }\r\n\r\n  private _config: TaskConfig;\r\n  public get Config(): TaskConfig{\r\n    return this._config;\r\n  }\r\n  public set Config( c: TaskConfig){\r\n     this._config = c;\r\n  }\r\n\r\n  getColumns(content:Array<any>):Array<string> {\r\n    let columns:Array<string>=[];\r\n    if(!content) return columns;\r\n    content.forEach(row=>\r\n      {\r\n        Object.keys(row).forEach(key=>{\r\n          if(columns.indexOf(key)<0)\r\n          {\r\n            columns.push(key);\r\n          }\r\n        });\r\n    });\r\n    return columns;\r\n  }\r\n\r\n  setErrorState(error:string){\r\n    this.Data = null;\r\n    this.resultError = error;\r\n    this.columns = null;\r\n  }\r\n\r\n  resetData(){\r\n    this.Data = null;\r\n    this.resultError = null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, EMPTY, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { TaskConfig } from '../shared/models/task_config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksConfigService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getConfigById(id: number): Observable<TaskConfig> {\r\n    var items = [\"\", \"simple\", \"one-to-many\", \"many-to-many\", \"hierarchical-queries\", \"leaderboard\", \"sparse\"];\r\n    return this.getConfig(items[id]);\r\n  }\r\n  private getConfig(name: string): Observable<TaskConfig> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.get<TaskConfig>('assets/' + name + '.json', httpOptions)\r\n      .pipe(\r\n        catchError(err => {\r\n          return throwError(err);\r\n        }\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CurrentDataService } from '../services/current-data.service';\r\n\r\n@Component({\r\n  selector: 'app-table-view',\r\n  templateUrl: './table-view.component.html',\r\n  styleUrls: ['./table-view.component.scss']\r\n})\r\nexport class TableViewComponent implements OnInit {\r\n  constructor(private currentDataService: CurrentDataService) { }\r\n  @Input()\r\n  public content: Array<any>;\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getColumns(): Array<string> {\r\n    return this.currentDataService.getColumns(this.content);\r\n  }\r\n\r\n}\r\n","<mat-expansion-panel [expanded]=\"true\" #panel  class=\"mat-elevation-z8\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>      \r\n      Data\r\n    </mat-panel-title>\r\n    <mat-panel-description>\r\n      Result of executing the SQL query which represents content of DynamoSQL\r\n    </mat-panel-description>\r\n  </mat-expansion-panel-header> \r\n<mat-table mat-table [dataSource]=\"content\">\r\n    <ng-container *ngFor=\"let col of getColumns()\" [matColumnDef]=\"col\">\r\n        <mat-header-cell *matHeaderCellDef>{{col}}</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\"> {{element[col]}}</mat-cell>\r\n      </ng-container>\r\n    <mat-header-row  *matHeaderRowDef=\"getColumns()\"></mat-header-row >\r\n    <mat-row *matRowDef=\"let row; columns: getColumns();\">        \r\n    </mat-row>\r\n</mat-table>\r\n</mat-expansion-panel>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}